let dataHandlers={},isListenerActive=!1,handleMessage=({data:e})=>{if(!Array.isArray(e)||e.length<1)return;let[t,...s]=e;dataHandlers[t]?.(...s)},destroyCommand=e=>{e?delete dataHandlers[e]:isListenerActive&&(window.removeEventListener("message",handleMessage),isListenerActive=!1)},createCommand=e=>{if(!e||"object"!=typeof e)throw Error("Handlers must be an object");Object.assign(dataHandlers,e),isListenerActive||(window.addEventListener("message",handleMessage),isListenerActive=!0)},createMessenger=(e=!1)=>{let t=t=>(...s)=>{(!e||ENV?.devMode)&&window.postMessage([t,...s],"*")};return new Proxy({},{get:(e,s)=>"debug"===s?new Proxy({},{get:(e,t)=>(...e)=>{ENV?.devMode&&window.postMessage([t,...e],"*")}}):t(s)})},command=createMessenger(),invoke=new Proxy({},{get:(e,t)=>async(...e)=>{if(ENV?.devMode)return[];let s=await fetch(`https://${window.GetParentResourceName()}/__invoke__.lua.command`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify([t,...e])});return await s.json()}});export{createCommand,destroyCommand,command,invoke};